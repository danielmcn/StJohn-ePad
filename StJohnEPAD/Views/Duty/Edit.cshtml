@model StJohnEPAD.Models.Duty

@{
    ViewBag.Title = "Edit Duty: " + Model.DutyName;
}

<h2>@ViewBag.Title</h2>
<p>

</p>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Duty</legend>

        @Html.HiddenFor(model => model.DutyID)
        @Html.HiddenFor(model => model.RowVersion)

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyName)
            @Html.ValidationMessageFor(model => model.DutyName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyDate)
        </div>
        <div class="editor-field">
            <!--- Change to TextBoxFor to get DatePicker-->
            @Html.EditorFor(model => model.DutyDate, new { @class = "date", type = "date", id = "date" })
            @Html.ValidationMessageFor(model => model.DutyDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyStartTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyStartTime , new { type = "time" })
            @Html.ValidationMessageFor(model => model.DutyStartTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyEndTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyEndTime, new { id = "endTime" })
            @Html.ValidationMessageFor(model => model.DutyEndTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyLocation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyLocation)
            @Html.ValidationMessageFor(model => model.DutyLocation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyDescription)
            @Html.ValidationMessageFor(model => model.DutyDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyAdditionalNotes)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.DutyAdditionalNotes)
            @Html.ValidationMessageFor(model => model.DutyAdditionalNotes)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyOrganiser)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyOrganiser)
            @Html.ValidationMessageFor(model => model.DutyOrganiser)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyOrganiserPhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyOrganiserPhoneNumber)
            @Html.ValidationMessageFor(model => model.DutyOrganiserPhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DutyOrganiserEmailAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyOrganiserEmailAddress)
            @Html.ValidationMessageFor(model => model.DutyOrganiserEmailAddress)
        </div>
        <h3>
            If the map is returning an incorrect location, add specific co-ordinates:
        </h3>
        <div class="editor-label">
            @Html.LabelFor(model => model.DutyLocationLat)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyLocationLat)
            @Html.ValidationMessageFor(model => model.DutyLocationLat)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DutyLocationLong)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DutyLocationLong)
            @Html.ValidationMessageFor(model => model.DutyLocationLong)
        </div>


        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")

    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.20.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/themes/base/jquery-ui.css")" type="text/css"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(".date").datepicker();
            //$("#date").datepicker();
        });
    </script>

}
